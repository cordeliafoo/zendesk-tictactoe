{"version":3,"sources":["components/userInput.js","components/square.js","components/board.js","utils/functions.js","components/reset.js","App.js","index.js"],"names":["UserInput","props","handleChange","event","input","target","setState","name","value","state","player1","player2","formErrors","e","player","this","localStorage","setItem","preventDefault","getItem","onSubmit","handleFormSubmit","onChange","type","to","React","Component","Square","className","onClick","Board","squares","Array","fill","xIsNext","gridLength","gameOverWithWinner","gameOverWithDraw","winner","index","slice","rows","i","length","a","b","c","utils","count","forEach","item","style","width","height","display","gridTemplate","x","o","gridLengthArr","displayNextPlayer","map","handleSquareClick","Reset","handleOnReset","clear","window","location","reload","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAqFeA,E,kDAjFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAsBRC,aAAe,SAAAC,GACb,IAAMC,EAAQD,EAAME,OACpB,EAAKC,SAAL,eAAiBF,EAAMG,KAAOH,EAAMI,SAvBpC,EAAKC,MAAQ,CACXC,QAAS,GACTC,QAAS,GACTC,YAAY,GALG,E,6DASFC,EAAGC,GAAS,IAAD,EACGC,KAAKN,MAA1BC,EADkB,EAClBA,QAASC,EADS,EACTA,QACD,KAAZD,GAA8B,KAAZC,EACL,YAAXG,EACFE,aAAaC,QAAQ,IAAKP,GAE1BM,aAAaC,QAAQ,IAAKN,IAG5BE,EAAEK,iBACFH,KAAKT,SAAS,CAAEM,YAAY,O,+BAStB,IAAD,OACCA,EAAeG,KAAKN,MAApBG,WAEJF,EAAUM,aAAaG,QAAQ,KAC/BR,EAAUK,aAAaG,QAAQ,KAEnC,OACE,gCACe,OAAZT,EACC,uBAAMU,SAAU,SAAAP,GAAC,OAAI,EAAKQ,iBAAiBR,EAAG,YAA9C,UACE,8CACY,IACV,uBACEN,KAAK,UACLC,MAAOO,KAAKN,MAAMC,QAClBY,SAAUP,KAAKb,kBAGnB,wBAAQqB,KAAK,SAAb,gBACCX,GAAc,0DAGjB,2CAAcF,OAEbA,IACY,OAAZC,EACC,uBAAMS,SAAU,SAAAP,GAAC,OAAI,EAAKQ,iBAAiBR,EAAG,YAA9C,UACE,8CACY,IACV,uBACEN,KAAK,UACLC,MAAOO,KAAKN,MAAME,QAClBW,SAAUP,KAAKb,kBAGnB,wBAAQqB,KAAK,SAAb,gBACCX,GAAc,0DAGjB,2CAAcD,QAGfD,KACCC,GACA,cAAC,IAAD,CAAMa,GAAG,SAAT,SACE,0D,GA1EUC,IAAMC,WCOfC,EARA,SAAA1B,GACb,OACE,wBAAQ2B,UAAU,SAASC,QAAS5B,EAAM4B,QAA1C,SACG5B,EAAMO,S,YC6FEsB,E,kDA5Fb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CACXsB,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,EACTC,WAAY,EACZC,oBAAoB,EACpBC,kBAAkB,EAClBC,OAAQ,IARO,E,8DAYDC,GAEhB,IAAMR,EAAUhB,KAAKN,MAAMsB,QAAQS,QAFZ,EAUnBzB,KAAKN,MAJPyB,EANqB,EAMrBA,QACAE,EAPqB,EAOrBA,mBACAC,EARqB,EAQrBA,iBACAF,EATqB,EASrBA,YAGyB,IAAvBC,IAAqD,IAArBC,IAClCN,EAAQQ,GAASL,EAAU,IAAM,IACjCnB,KAAKT,SAAS,CACZyB,QAASA,EACTG,SAAUA,KAId,IAAMI,ECtCH,SAAoBP,GAczB,IAZA,IAAMU,EAAO,CACX,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAIAC,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CAAC,IAAD,cAClBD,EAAKC,GADa,GAC7BE,EAD6B,KAC1BC,EAD0B,KACvBC,EADuB,KAIpC,GAAIf,EAAQa,IAAMb,EAAQa,KAAOb,EAAQc,IAAMd,EAAQa,KAAOb,EAAQe,GAEpE,OAAO9B,aAAaG,QAAQY,EAAQa,IAKxC,OAAO,KDaUG,CAAiBhB,GAC5BO,GACFvB,KAAKT,SAAS,CAAE8B,oBAAoB,EAAME,OAAQA,KAGI,ICfrD,SAA8BP,EAASI,GAE5C,IAAIa,EAAQ,EAaZ,OAVEjB,GACAA,EAAQkB,SAAQ,SAASC,GAEV,OAATA,GAEFF,OAKFA,IAAUb,EAAaA,EDArBY,CAA2BhB,EAASI,IACtCpB,KAAKT,SAAS,CAAE+B,kBAAkB,M,+BA0BpC,IAtBQ,IAAD,OACDc,EAAQ,CACZC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,aAAa,UAAD,OAAYxC,KAAKN,MAAM0B,WAAvB,yBACVpB,KAAKN,MAAM0B,WADD,WALP,EAgBHpB,KAAKN,MALP0B,EAXK,EAWLA,WACAD,EAZK,EAYLA,QACAG,EAbK,EAaLA,iBACAD,EAdK,EAcLA,mBACAE,EAfK,EAeLA,OAGIkB,EAAIxC,aAAaG,QAAQ,KACzBsC,EAAIzC,aAAaG,QAAQ,KAE3BuC,EAAgB,GACXhB,EAAI,EAAGA,EAAIP,EAAaA,EAAYO,IAC3CgB,EAAchB,GAAKA,EAGrB,IAAMiB,GACiB,IAArBtB,IAAqD,IAAvBD,EAEhC,OACE,sBAAKR,UAAU,iBAAf,UACG+B,IACEzB,EAAU,sCAAOsB,EAAP,aAAyB,sCAAOC,EAAP,gBAEnCrB,GAAsB,8BAAIE,EAAJ,cACtBD,GAAoB,4CACvB,qBAAKT,UAAU,QAAQuB,MAAOA,EAA9B,SACGO,EAAcE,KAAI,SAACV,EAAMX,GAAP,OACjB,cAAC,EAAD,CAEE/B,MAAO,EAAKC,MAAMsB,QAAQQ,GAC1BV,QAAS,kBAAM,EAAKgC,kBAAkBtB,KAFjCA,e,GAlFCd,IAAMC,WEiBXoC,E,4MAlBbC,cAAgB,WACd/C,aAAagD,QACbC,OAAOC,SAASC,U,uDAIhB,OACE,gCACE,uBACA,uBACA,cAAC,IAAD,CAAM3C,GAAG,IAAT,SACE,wBAAQK,QAASd,KAAKgD,cAAtB,iC,GAZUtC,IAAMC,W,MCkBX0C,MAbf,WACE,OACE,sBAAKxC,UAAU,MAAf,UACE,6CACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,IAAIC,UAAWvE,IACjC,cAAC,IAAD,CAAOsE,KAAK,SAASC,UAAWzC,IAChC,cAAC,EAAD,WCVR0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba47c4b9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player1: \"\",\n      player2: \"\",\n      formErrors: false\n    };\n  }\n\n  handleFormSubmit(e, player) {\n    const { player1, player2 } = this.state;\n    if (player1 !== \"\" || player2 !== \"\") {\n      if (player === \"player1\") {\n        localStorage.setItem(\"x\", player1);\n      } else {\n        localStorage.setItem(\"o\", player2);\n      }\n    } else {\n      e.preventDefault();\n      this.setState({ formErrors: true });\n    }\n  }\n\n  handleChange = event => {\n    const input = event.target;\n    this.setState({ [input.name]: input.value });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    let player1 = localStorage.getItem(\"x\");\n    let player2 = localStorage.getItem(\"o\");\n\n    return (\n      <div>\n        {player1 === null ? (\n          <form onSubmit={e => this.handleFormSubmit(e, \"player1\")}>\n            <label>\n              Player 1:{\" \"}\n              <input\n                name=\"player1\"\n                value={this.state.player1}\n                onChange={this.handleChange}\n              />\n            </label>\n            <button type=\"submit\">Go</button>\n            {formErrors && <p>You can't be nameless!</p>}\n          </form>\n        ) : (\n          <p>Player 1: {player1}</p>\n        )}\n        {!!player1 &&\n          (player2 === null ? (\n            <form onSubmit={e => this.handleFormSubmit(e, \"player2\")}>\n              <label>\n                Player 2:{\" \"}\n                <input\n                  name=\"player2\"\n                  value={this.state.player2}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <button type=\"submit\">Go</button>\n              {formErrors && <p>You can't be nameless!</p>}\n            </form>\n          ) : (\n            <p>Player 2: {player2}</p>\n          ))}\n\n        {!!player1 &&\n          !!player2 && (\n            <Link to=\"/board\">\n              <button>Let's play!</button>\n            </Link>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default UserInput;\n","import React from \"react\";\n\nconst Square = props => {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\n\nimport Square from \"./square.js\";\nimport * as utils from \"../utils/functions\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      gridLength: 3,\n      gameOverWithWinner: false,\n      gameOverWithDraw: false,\n      winner: \"\"\n    };\n  }\n\n  handleSquareClick(index) {\n    // get current state of boxes\n    const squares = this.state.squares.slice();\n\n    // Mark the square either as 'x' or 'o'\n    const {\n      xIsNext,\n      gameOverWithWinner,\n      gameOverWithDraw,\n      gridLength\n    } = this.state;\n\n    if (gameOverWithWinner === false && gameOverWithDraw === false) {\n      squares[index] = xIsNext ? \"x\" : \"o\";\n      this.setState({\n        squares: squares,\n        xIsNext: !xIsNext\n      });\n    }\n\n    const winner = utils.findWinner(squares);\n    if (winner) {\n      this.setState({ gameOverWithWinner: true, winner: winner });\n    }\n\n    if (utils.areAllSquaresClicked(squares, gridLength) === true) {\n      this.setState({ gameOverWithDraw: true });\n    }\n  }\n\n  render() {\n    const style = {\n      width: \"250px\",\n      height: \"250px\",\n      display: \"grid\",\n      gridTemplate: `repeat(${this.state.gridLength}, 1fr)/repeat(${\n        this.state.gridLength\n      }, 1fr)`\n    };\n\n    const {\n      gridLength,\n      xIsNext,\n      gameOverWithDraw,\n      gameOverWithWinner,\n      winner\n    } = this.state;\n\n    const x = localStorage.getItem(\"x\");\n    const o = localStorage.getItem(\"o\");\n\n    let gridLengthArr = [];\n    for (let i = 0; i < gridLength * gridLength; i++) {\n      gridLengthArr[i] = i;\n    }\n\n    const displayNextPlayer =\n      gameOverWithDraw === false && gameOverWithWinner === false;\n\n    return (\n      <div className=\"boardContainer\">\n        {displayNextPlayer &&\n          (xIsNext ? <p>{`${x}'s turn`}</p> : <p>{`${o}'s turn`}</p>)}\n\n        {!!gameOverWithWinner && <p>{winner} wins!</p>}\n        {!!gameOverWithDraw && <p>It's a tie!</p>}\n        <div className=\"board\" style={style}>\n          {gridLengthArr.map((item, index) => (\n            <Square\n              key={index}\n              value={this.state.squares[index]}\n              onClick={() => this.handleSquareClick(index)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","export function findWinner(squares) {\n  // Array with winning combinations\n  const rows = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  // Iterate over array with winning combinations\n  for (let i = 0; i < rows.length; i++) {\n    const [a, b, c] = rows[i];\n\n    // Check if the game board contains winning combination\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      // Return the winner ('x' or 'o')\n      return localStorage.getItem(squares[a]);\n    }\n  }\n\n  // Otherwise do nothing\n  return null;\n}\n\nexport function areAllSquaresClicked(squares, gridLength) {\n  // Declare variable to store number of clicked squares.\n  let count = 0;\n\n  // Iterate over all squares\n  !!squares &&\n    squares.forEach(function(item) {\n      // Check if box is clicked (not null)\n      if (item !== null) {\n        // If yes, increase the value of count by 1\n        count++;\n      }\n    });\n\n  // Check if all squares are clicked (filled)\n  if (count === gridLength * gridLength) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Reset extends React.Component {\n  handleOnReset = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <div>\n        <br />\n        <br />\n        <Link to=\"/\">\n          <button onClick={this.handleOnReset}>Reset Game</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Reset;\n","import { BrowserRouter, Route } from \"react-router-dom\";\n\nimport UserInput from \"./components/userInput.js\";\nimport Board from \"./components/board.js\";\nimport Reset from \"./components/reset.js\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Tic Tac Toe</h1>\n      <BrowserRouter>\n        <Route exact path=\"/\" component={UserInput} />\n        <Route path=\"/board\" component={Board} />\n        <Reset />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}